name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  build-test:
    name: build+test (${{ matrix.os }} / node@${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'

      - name: Enable Corepack (Yarn)
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Node ESM import smoke
        run: node --input-type=module -e "import { generate, puid } from './build/module/index.mjs'; console.log(typeof generate==='function' && typeof puid==='function' ? 'ok' : 'bad')"

      - name: Test
        run: yarn test:unit

  esm-example:
    name: esm example (ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack (Yarn)
        run: corepack enable

      - name: Install deps and build package
        run: |
          yarn install --immutable
          yarn build

      - name: Pack tarball
        run: npm pack --json > pack.json

      - name: Install tarball into example
        run: |
          TARBALL=$(node -e "process.stdout.write(JSON.parse(require('fs').readFileSync('pack.json','utf8'))[0].filename)")
          cd examples/node-esm
          npm i --no-audit --no-fund ../../$TARBALL

      - name: Run example
        run: node examples/node-esm/index.mjs

